<?xml version="1.0" encoding="utf-8"?>
<project name="TrackAnnot" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>

        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->
	<target name="-before-build" description="Sencha Cmd package extension point">
		<antcall target="test" />
		<antcall target="docs" />
	</target>
	<target name="docs" description="Generates JSDuck API documentation">
		<echo message="Generating API documentation..." />
		<exec executable="jsduck" timeout="20000" failonerror="true" />
	</target>
	<target name="test" description="Tests the build against PhantomJS using Karma">
		<exec executable="karma" failonerror="true">
			<arg line="start" />
		</exec>
		<antcall target="lcovmerge" />
	</target>
	<target name="lcovmerge" description="Merge coverage from all browsers">
		<!-- Replace phantomjs with loop of dirs in coverage/ -->
	    <property name="phantomjs" value="PhantomJS 1.9.2 (Linux)" />
		<exec executable="lcov" failonerror="false">
			<arg line="-a 'coverage/${phantomjs}/lcov.info' -o coverage/coverage.lcov" />
		</exec>
	</target>
        <target name="-after-resources">
            <property name="cesium" value="${build.resources.dir}/libs/Cesium-1.14" />
            <echo message="Cleaning up ${cesium}" />
            <delete includeemptydirs="true">
              <fileset dir="${cesium}/Apps" />
              <fileset dir="${cesium}/Source" />
              <fileset dir="${cesium}/Specs" />
              <fileset dir="${cesium}/ThirdParty" />
              <fileset dir="${cesium}/Build/Apps" />
              <fileset dir="${cesium}/Build/Documentation" />
              <fileset dir="${cesium}/Build/CesiumUnminified" />
            </delete>
        </target>
</project>
